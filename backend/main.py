from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
import os

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI
app = FastAPI(
    title="Social Media Automation",
    description="–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ—Å—Ç–∏–Ω–≥–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏",
    version="1.0.0"
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
os.makedirs("uploads", exist_ok=True)
os.makedirs("logs", exist_ok=True)

@app.get("/")
async def root():
    return {
        "message": "üöÄ Social Media Automation API —Ä–∞–±–æ—Ç–∞–µ—Ç!",
        "version": "1.0.0",
        "status": "‚úÖ SUCCESS! –ù–ê–ö–û–ù–ï–¶-–¢–û –ó–ê–†–ê–ë–û–¢–ê–õ–û!",
        "python_version": "3.13.4",
        "fastapi_version": "0.115.0"
    }

@app.get("/api/health")
async def health_check():
    import sys
    return {
        "status": "healthy",
        "message": "üéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç! MVP –∑–∞–ø—É—â–µ–Ω!",
        "python": sys.version,
        "platform": "Render"
    }

@app.get("/api/test")
async def test_endpoint():
    return {
        "success": True,
        "message": "üéâ –¢–ï–°–¢ –ü–†–û–®–ï–õ! API –†–ê–ë–û–¢–ê–ï–¢!",
        "backend": "FastAPI 0.115.0",
        "database": "–ì–æ—Ç–æ–≤–æ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é",
        "adspower": "–ì–æ—Ç–æ–≤–æ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏"
    }

# –ü—Ä–æ—Å—Ç–æ–π POST endpoint
@app.post("/api/echo")
async def echo_endpoint(data: dict):
    return {
        "success": True,
        "message": "Echo —Ä–∞–±–æ—Ç–∞–µ—Ç!",
        "received_data": data
    }

if __name__ == "__main__":
    import uvicorn
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Social Media Automation API...")
    print("üéØ Render –¥–µ–ø–ª–æ–π - –≤–µ—Ä—Å–∏—è –¥–ª—è Python 3.13")
    uvicorn.run(app, host="0.0.0.0", port=8000, reload=True) 