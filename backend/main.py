from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
import os
import uvicorn

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ FastAPI
app = FastAPI(
    title="Social Media Automation",
    description="–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø–æ—Å—Ç–∏–Ω–≥–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏",
    version="1.0.0"
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
os.makedirs("../uploads", exist_ok=True)
os.makedirs("../logs", exist_ok=True)

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
app.mount("/uploads", StaticFiles(directory="../uploads"), name="uploads")

# –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–µ—Ä–æ–≤
from adspower_api import router as adspower_router
app.include_router(adspower_router)

@app.get("/")
async def root():
    return {
        "message": "Social Media Automation API —Ä–∞–±–æ—Ç–∞–µ—Ç!",
        "version": "1.0.0",
        "status": "üöÄ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!"
    }

@app.get("/api/health")
async def health_check():
    return {
        "status": "healthy",
        "message": "–í—Å–µ —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ ‚úÖ"
    }

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä...")
    print("üìç –ê–¥—Ä–µ—Å: http://localhost:8000")
    print("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/docs")
    uvicorn.run(app, host="0.0.0.0", port=8000, reload=True) 