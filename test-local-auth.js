// –¢–µ—Å—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ
const testLocalAuth = async () => {
  const baseUrl = 'http://localhost:3000';
  
  console.log('üîç Testing LOCAL authentication...');
  console.log(`üì° Backend URL: ${baseUrl}`);
  
  // –¢–µ—Å—Ç 1: Health Check
  try {
    console.log('\n1Ô∏è‚É£ Testing Health Check...');
    const healthResponse = await fetch(`${baseUrl}/health`);
    const healthData = await healthResponse.json();
    console.log('‚úÖ Health:', healthData);
  } catch (error) {
    console.log('‚ùå Health check failed:', error.message);
    console.log('üö® Local server might not be running on port 3000');
    return;
  }
  
  // –¢–µ—Å—Ç 2: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
  try {
    console.log('\n2Ô∏è‚É£ Testing Registration...');
    const email = `test-${Date.now()}@example.com`;
    const password = '123456';
    
    const registerResponse = await fetch(`${baseUrl}/auth/register`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ email, password })
    });
    
    const registerData = await registerResponse.json();
    console.log(`üìä Status: ${registerResponse.status}`);
    console.log('üìù Registration result:', registerData);
    
    if (registerData.success && registerData.token) {
      console.log('‚úÖ Registration successful! Token received.');
      
      // –¢–µ—Å—Ç 3: –í—Ö–æ–¥ —Å —Ç–µ–º–∏ –∂–µ –¥–∞–Ω–Ω—ã–º–∏
      console.log('\n3Ô∏è‚É£ Testing Login with registered credentials...');
      const loginResponse = await fetch(`${baseUrl}/auth/login`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, password })
      });
      
      const loginData = await loginResponse.json();
      console.log(`üìä Status: ${loginResponse.status}`);
      console.log('üîê Login result:', loginData);
      
      if (loginData.success && loginData.token) {
        console.log('‚úÖ Login successful! Authentication works!');
      } else {
        console.log('‚ùå Login failed:', loginData.error);
      }
      
    } else {
      console.log('‚ùå Registration failed:', registerData.error);
    }
  } catch (error) {
    console.log('‚ùå Registration error:', error.message);
  }
  
  // –¢–µ—Å—Ç 4: –õ–æ–≥–∏–Ω —Å –Ω–µ–≤–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  try {
    console.log('\n4Ô∏è‚É£ Testing Login with wrong credentials...');
    const wrongLoginResponse = await fetch(`${baseUrl}/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({
        email: 'wrong@example.com',
        password: 'wrongpassword'
      })
    });
    
    const wrongLoginData = await wrongLoginResponse.json();
    console.log(`üìä Status: ${wrongLoginResponse.status}`);
    console.log('üö´ Wrong login result:', wrongLoginData);
    
    if (wrongLoginResponse.status === 401) {
      console.log('‚úÖ Correctly rejected wrong credentials!');
    } else {
      console.log('‚ùå Security issue: Wrong credentials were accepted!');
    }
  } catch (error) {
    console.log('‚ùå Login test error:', error.message);
  }
  
  console.log('\nüèÅ LOCAL authentication test completed!');
};

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testLocalAuth(); 